#                                       функции any(), all(), zip(), enumerate()

#               *************   Функции all() и any()       *******
# При работе с коллекциями часто приходится определять, выполняется ли некоторое условие одновременно для всех элементов
# последовательности или хотя бы для одного. Для этого существуют две встроенные функции all() и any()

#               ***********     Функция all()           *****

# Встроенная функция all() возвращает значение True, если все элементы переданной ей последовательности (итерируемого объекта) истинны (приводятся к значению True), и False в противном случае
#
# Сигнатура функции следующая: all(iterable). В качестве iterable может выступать любой итерируемый объект:
#
# список;
# кортеж;
# строка;
# множество;
# словарь и т.д.

# print(all([True, True, True]))     #  возвращает True, так как все значения списка равны True
# print(all([True, True, False]))    #  возвращает False, так как не все значения списка равны True

# Напомним, что в Python все следующие значения приводятся к значению False:
#
# константы None и False;
# нули всех числовых типов данных: 0, 0.0, 0j, Decimal(0), Fraction(0, 1);
# пустые коллекции: '', (), [], {}, set(), range(0)

# print(all([1, 2, 3]))
# print(all([1, 2, 3, 0, 5]))
# print(all([True, 0, 1]))
# print(all(('', 'red', 'green')))
# print(all({0j, 3+4j}))

# При работе со словарями функция all() проверяет на соответствие параметрам True ключи словаря, а не их значения

# dict1 = {0: 'Zero', 1: 'One', 2: 'Two'}
# dict2 = {'Zero': 0, 'One': 1, 'Two': 2}
#
# print(all(dict1))
# print(all(dict2))

# Обратите внимание: если переданный итерируемый объект пустой, то функция all() возвращает значение True

# print(all([]))          #  передаем пустой список
# print(all(()))          #  передаем пустой кортеж
# print(all(''))          #  передаем пустую строку
# print(all([[], []]))    #  передаем список, содержащий пустые списки
#
#
# #                  ***********      Функция any()       ****
#
# # Встроенная функция any() возвращает значение True, если хотя бы один элемент переданной ей последовательности (итерируемого объекта) является истинным (приводится к значению True), и False в противном случае
# print(any([False, True, False]))       #  возвращает True, так как есть хотя бы один элемент, равный True
# print(any([False, False, False]))

# print(any([0, 0, 0]))
# print(any([0, 1, 0]))
# print(any([False, 0, 1]))
# print(any(['', [], 'green']))
# print(any({0j, 3+4j, 0.0}))

# При работе со словарями функция any() проверяет на соответствие True ключи словаря, а не их значения

# dict1 = {0: 'Zero'}
# dict2 = {'Zero': 0, 'One': 1}
#
# print(any(dict1))
# print(any(dict2))

# Обратите внимание: если переданный объект пуст, то функция any() возвращает значение False

